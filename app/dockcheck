#!/bin/bash


#Remove everything in database before running dockcheck & set state to running
        psql -U postgres -d postgres -c "TRUNCATE TABLE containers;" 
        psql -U postgres -d postgres -c "UPDATE STATE SET RUNNING = 'true';" 
        
#If exclude is present
EXCLUDE=/app/EXCLUDE
if [ -f "$EXCLUDE" ]; then
        EXCLUDE=$(</app/EXCLUDE)
        /app/dockcheck.sh -e $EXCLUDE | sed -r "s:\x1B\[[0-9;]*[mK]::g" > /app/containers_temp
        cat /app/containers_temp > /app/containers

        else
#If exclude is not present
        /app/dockcheck.sh | sed -r "s:\x1B\[[0-9;]*[mK]::g" > /app/containers_temp
        cat /app/containers_temp > /app/containers
fi

#Check if exporters exists and wait for them

checkactive=$(psql -U postgres -d postgres -AXtqc "SELECT ACTIVE FROM EXPORTERS WHERE ACTIVE='true'";)
if [[ $checkactive == 'true' ]]; then
        while true; do
        checkdone=$(psql -U postgres -d postgres -AXtqc "SELECT DONE FROM EXPORTERS WHERE DONE='true'";)
        sleep .5
        echo "Still running!"
        if [[ $checkdone == 'true' ]]; then
        echo "All exporters are done!"
        break
else
continue
fi

done    

fi     

#Insert into database with hostname + containers
        HOSTNAME=$(cat /etc/hostname)
        cat GotUpdates.txt | while read -r line ; do
        psql -U postgres -d postgres -c "INSERT INTO CONTAINERS \
        (HOST,NAME,LATEST,ERROR,NEW) \
        VALUES('$HOSTNAME','$line','false','false','true');" 
        done
        
        cat NoUpdates.txt | while read -r line ; do
        psql -U postgres -d postgres -c "INSERT INTO CONTAINERS \
        (HOST,NAME,LATEST,ERROR,NEW) \
        VALUES('$HOSTNAME','$line','true','false','false');" 
        done
     
        cat GotErrors.txt  | while read -r line ; do
        psql -U postgres -d postgres -c "INSERT INTO CONTAINERS \
        (HOST,NAME,LATEST,ERROR,NEW) \
        VALUES('$HOSTNAME','$line','false','true','false');" 
        done




if [ -f "$NOTIFY_URLS" ]; then
        
le=$(psql -U postgres -d postgres -AXtqc "SELECT DISTINCT host FROM containers WHERE latest='true';")

for i in {$le}
do
psql -U postgres -d postgres -AXtqc "SELECT name FROM containers WHERE latest='true' AND host='$le';"

done
        if [ -n "$data" ]; then
                
                
                if [ -f "$NOTIFY_DEBUG" ]; then


                        
                        apprise -vvvv -t "Dockcheck-web Notify" -b "$data" "$NOTIFY_URLS"
                else                      
                        
                        apprise -t "Dockcheck-web Notify" -b "$data" "$NOTIFY_URLS"
                        
                fi
        fi
fi


#Set running state to false
psql -U postgres -d postgres -c "UPDATE STATE SET RUNNING = 'false';" 

if [ $? -eq 0 ]; then echo "$(date). Cron ran without error." >> /var/log/cron.log ; else echo "$(date). Cron got errors." >> /var/log/cron.log ; fi